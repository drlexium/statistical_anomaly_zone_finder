Проект: Прибор для выявления зон статистических аномалий
Описание проекта
Этот проект представляет собой прибор для выявления зон статистических аномалий с использованием Raspberry Pi Pico. Основная задача прибора — анализ данных, генерация случайных чисел, вычисление среднего арифметического и визуализация результатов на LCD-экране. Проект включает:

Генерацию случайных чисел и заполнение массива данных.

Вычисление среднего арифметического и определение аномалий.

Визуализацию данных на LCD-экране с помощью пользовательских символов.

Индикацию состояния прибора с помощью адресного RGB-светодиода (WS2812).

Прибор может быть использован для учебных целей, экспериментов с обработкой данных и визуализацией статистических аномалий.

Компоненты
Raspberry Pi Pico – микроконтроллер для выполнения программы.

Адресный RGB-светодиод (WS2812) – для индикации состояния прибора.

LCD-экран (16x2, I2C) – для отображения информации.

Кнопка – для сброса массива данных.

Резисторы и провода – для подключения компонентов.

Подключение компонентов
RGB-светодиод (WS2812)
Пин DIN – подключите к GPIO23 (Pin 29) на Raspberry Pi Pico.

GND – подключите к GND на Raspberry Pi Pico.

VCC – подключите к 3.3V на Raspberry Pi Pico.

LCD-экран (I2C)
SDA – подключите к GPIO0 (Pin 1) на Raspberry Pi Pico.

SCL – подключите к GPIO1 (Pin 2) на Raspberry Pi Pico.

VCC – подключите к 3.3V на Raspberry Pi Pico.

GND – подключите к GND на Raspberry Pi Pico.

Кнопка
Один контакт кнопки подключите к GPIO15 (Pin 20) на Raspberry Pi Pico.

Второй контакт кнопки подключите к GND на Raspberry Pi Pico.

Используйте подтягивающий резистор (внутренний PULL_UP).

Установка и запуск
Убедитесь, что у вас установлена последняя версия MicroPython на Raspberry Pi Pico.

Скопируйте файлы проекта (включая библиотеки lcd_api.py и i2c_lcd.py) на Raspberry Pi Pico.

Подключите компоненты согласно схеме.

Запустите файл main.py на Raspberry Pi Pico.

Функционал программы
Инициализация:

При запуске светодиод загорается синим цветом, а на LCD-экране отображается сообщение "Initializing...".

После завершения инициализации светодиод меняет цвет на зелёный, а на экране появляется шкала и надпись "Wait".

Генерация данных:

Программа генерирует случайные числа и заполняет ими массив.

После заполнения массива вычисляется среднее арифметическое, и на LCD-экране отображается позиция прямоугольника (курсора), соответствующая этому значению.

Выявление аномалий:

В нормальных условиях курсор колеблется около центра экрана, не выходя за пределы одного сегмента вправо или влево.

Если курсор отклоняется от центральной зоны экрана на 3-4 сегмента, это указывает на статистическую аномалию.

Аномалии визуализируются только на LCD-экране с помощью позиции прямоугольника.

Светодиодный индикатор:

Синий цвет – инициализация прибора.

Жёлтый цвет – проблемы с LCD-экраном (например, отсутствие подключения).

Фиолетовый цвет – идёт первичное заполнение массива данных.

Зелёный цвет – прибор готов к работе.

Сброс массива:

При нажатии кнопки массив данных сбрасывается, светодиод меняет цвет на фиолетовый, а на экране снова появляется шкала и надпись "Wait".

Пользовательские символы:

На LCD-экране используются пользовательские символы для отображения шкалы и курсора.

Настройка и кастомизация
Изменение размера массива: Для анализа большего или меньшего количества данных измените значение переменной array_size.

Настройка порога аномалий: Вы можете изменить логику определения аномалий, настроив диапазон значений в коде.

Изменение адреса LCD-экрана: Если адрес вашего LCD-экрана отличается от 0x27, измените значение переменной I2C_ADDR.

Настройка пользовательских символов: Вы можете изменить или добавить свои символы, редактируя массивы в разделе "Создание пользовательских символов".

Примеры использования
Образовательный проект: Изучение работы с PIO, I2C, генерацией случайных чисел и LCD-экранами.

Эксперименты с данными: Анализ случайных данных и выявление аномалий.

Прототипирование: Быстрое создание прототипов с использованием Raspberry Pi Pico.

Лицензия
Этот проект распространяется под лицензией MIT. Вы можете свободно использовать, изменять и распространять код.

Автор
Проект разработан Alex Cube (drLexium).
Страничка на GitHub: https://github.com/drlexium/statistical_anomaly_zone_finder

Благодарности
Разработчикам MicroPython за отличную поддержку Raspberry Pi Pico.

Сообществу Raspberry Pi за вдохновение и поддержку.

Ссылки
Официальный сайт Raspberry Pi Pico: https://www.raspberrypi.org/products/raspberry-pi-pico/

Документация MicroPython: https://docs.micropython.org/

Библиотека I2C LCD: https://github.com/dhylands/python_lcd